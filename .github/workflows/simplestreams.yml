name: Build incus Simplestreams

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 */10 * *'

jobs:
  build-simplestreams:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git python3-pip
        wget https://github.com/MottainaiCI/simplestreams-builder/releases/download/v0.3.1/simplestreams-builder-v0.3.1-linux-amd64 simplestreams-builder
        chmod 777 simplestreams-builder
        mv simplestreams-builder /usr/local/bin
        simplestreams-builder --version

    - name: Download assets from GitHub Release
      run: |
        python3 <<EOF
        import requests, os, re, glob
        from datetime import datetime
        API_URL = "https://api.github.com/repos/oneclickvirt/incus_images/releases/tags/processed"
        OUTDIR = "build/spiritlhl"
        os.makedirs(OUTDIR, exist_ok=True)
        r = requests.get(API_URL)
        r.raise_for_status()
        assets = r.json().get("assets", [])
        seen_dirs = set()
        dt = datetime.now().strftime("%Y%m%d_%H%M")
        for a in assets:
            name = a["name"]
            url = a["browser_download_url"]
            m = re.match(r"([a-zA-Z0-9]+)-([^-]+)-([^-]+)-([^-]+)-(rootfs|incus)\.(squashfs|tar\.xz)", name)
            if not m: continue
            os_name, rel, arch, variant, t, ext = m.groups()
            local_dir = f"{OUTDIR}/{os_name}/{rel}/{arch}/{variant}/{dt}"
            os.makedirs(local_dir, exist_ok=True)
            local_file = f"{local_dir}/{name}"
            if not os.path.exists(local_file):
                print("Downloading", url)
                resp = requests.get(url, stream=True)
                with open(local_file, "wb") as f:
                    for chunk in resp.iter_content(8192):
                        f.write(chunk)
            if local_dir not in seen_dirs:
                meta_file = f"{local_dir}/meta.yaml"
                if not os.path.exists(meta_file):
                    with open(meta_file, "w") as mf:
                        mf.write(f"architecture: {arch}\n")
                        mf.write(f"os: {os_name}\n")
                        mf.write(f"release: {rel}\n")
                        mf.write(f"variant: {variant}\n")
                        mf.write(f"type: {t}\n")
                        mf.write(f"created_at: {dt}\n")
                seen_dirs.add(local_dir)
        for d, _, _ in os.walk(OUTDIR):
            for f in glob.glob(os.path.join(d, "*-rootfs.squashfs")):
                os.rename(f, os.path.join(d, "rootfs.squashfs"))
            for f in glob.glob(os.path.join(d, "*-incus.tar.xz")):
                os.rename(f, os.path.join(d, "incus.tar.xz"))
        EOF

    - name: Generate SHA256SUMS for images
      run: |
        find build/spiritlhl -type d | while read d; do
          cd "$d"
          files=""
          for f in rootfs.squashfs incus.tar.xz; do
            if [ -f "$f" ]; then
              files="$files $f"
            fi
          done
          if [ -n "$files" ]; then
            sha256sum $files > SHA256SUMS
            echo "Generated SHA256SUMS in $d"
          fi
          cd - >/dev/null
        done

    - name: Build simplestreams index and webpage (with simplestreams-builder)
      run: |
        # 你可以自定义 --web-dir, --images-dir 路径
        simplestreams-builder \
          --images-dir build/spiritlhl \
          --web-dir build/web \
          --variant spiritlhl \
          --distribution incus

    - name: Patch index.html for spiritlhl (content-only)
      run: |
        find build/web -name "index.html" | while read -r f; do
          sed -i 's/images:/spiritlhl:/g' "$f"
          sed -i 's/The images provided via this image server are unofficial images,/ /g' "$f"
          sed -i 's/provided as a convenience and for testing purposes. Whenever possible, you/lxc remote add spiritlhl https:\/\/incusimages.spiritlhl.net --protocol simplestreams --public/g' "$f"
          sed -i 's/should try to use official images from your Linux distribution of choice./lxc image list spiritlhl:debian/g' "$f"
          sed -i 's@https://github.com/lxc/incus/issues/new@https://github.com/oneclickvirt/incus_images@g' "$f"
          sed -i 's@https://documentation.ubuntu.com/incus/en/latest/howto/images_manage/@https://www.spiritlhl.net@g' "$f"
          echo "Patched $f"
        done

    - name: List build contents
      run: |
        echo "Build directory contents:"
        find build -type f | head -30

    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './build/web'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
