name: Test Incus Images

on:
  schedule:
    - cron: '0 16 * * *'  # 每天UTC 16:00运行
  workflow_dispatch:  # 允许手动触发

jobs:
  test-images:
    strategy:
      fail-fast: false
      matrix:
        arch:
          - name: amd64
            runner: ubuntu-latest
            file: x86_64_all_images.txt
            output: x86_64_fixed_images.txt
          - name: arm64
            runner: ubuntu-24.04-arm
            file: arm64_all_images.txt
            output: arm64_fixed_images.txt
    
    runs-on: ${{ matrix.arch.runner }}
    timeout-minutes: 180  # 设置超时时间为3小时

    steps:
    - uses: actions/checkout@v4
      
    - name: Setup Environment
      run: |
        sudo apt update -y
        sudo sh -c 'export noninteractive=true && curl -L https://raw.githubusercontent.com/oneclickvirt/incus/main/scripts/incus_install.sh -o incus_install.sh && chmod +x incus_install.sh && bash incus_install.sh'
        
    - name: Configure Git
      run: |
        git config --global user.name "daily-test"
        git config --global user.email "test@spiritlhl.top"
        
    - name: Download Test Lists
      run: |
        curl -o ${{ matrix.arch.file }} https://raw.githubusercontent.com/oneclickvirt/incus_images/main/${{ matrix.arch.file }}
        touch ${{ matrix.arch.output }}  # 创建输出文件
        
    - name: Test Images
      run: |
        while IFS= read -r image; do
          if [[ -z "$image" ]]; then
            continue
          fi
          
          echo "Testing image: $image"
          if sudo bash test.sh "$image"; then
            echo "Test passed for $image"
          else
            echo "Test failed for $image"
            # 测试失败的镜像不会被添加到fixed文件中，因为测试脚本会处理这个
          fi
        done < ${{ matrix.arch.file }}
        
    - name: Push Results
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [[ -f ${{ matrix.arch.output }} ]]; then
          if [[ -s ${{ matrix.arch.output }} ]]; then
            echo "Pushing test results..."
            git add ${{ matrix.arch.output }}
            git commit -m "更新 ${{ matrix.arch.name }} 架构已测试镜像列表 $(date +%Y-%m-%d)"
            git push
          else
            echo "No images passed testing"
          fi
        else
          echo "Output file not found"
        fi
      continue-on-error: true

    - name: Upload Test Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs-${{ matrix.arch.name }}
        path: log
        retention-days: 7
