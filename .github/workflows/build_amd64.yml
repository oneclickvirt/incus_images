name: Build images amd64

on:
  workflow_dispatch:

jobs:
  build_images_amd64:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: check path
      run: |
        pwd

    - name: Configure Git
      run: |
        git config --global user.name "daily-update"
        git config --global user.email "tg@spiritlhl.top"
      
    - name: Build and Upload Images
      run: |
        # debian ubuntu centos almalinux rockylinux alpine openwrt oracle archlinux
        for distro in kali; do
          zip_name_list=($(bash build_images.sh $distro false))
          release_id=$(curl -s -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/oneclickvirt/incus_images/releases/tags/$distro" | jq -r '.id')
          for file in "${zip_name_list[@]}"; do
              echo "$file"
              echo "Checking if $file already exists in release..."
              existing_asset_id=$(curl -s -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/oneclickvirt/incus_images/releases/$release_id/assets" \
                | jq -r --arg name "$(basename "$file")" '.[] | select(.name == $name) | .id')
              if [ -n "$existing_asset_id" ]; then
                  echo "Asset $file already exists in release, deleting existing asset..."
                  delete_response=$(curl -L -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/oneclickvirt/incus_images/releases/assets/$existing_asset_id")
                  echo "$delete_response"
                  if [ "$delete_response" == "Status: 204" ]; then
                      echo "Existing asset deleted successfully."
                  else
                      echo "Failed to delete existing asset. Skipping file upload..."
                      rm -rf $file
                      continue
                  fi
              fi
              # # 上传文件
              # bash build_images.sh $distro true
              # echo "Uploading $file to release..."
              # curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              #   -H "Content-Type: application/zip" \
              #   --data-binary @"$file" \
              #   "https://uploads.github.com/repos/oneclickvirt/incus_images/releases/$release_id/assets?name=$(basename "$file")"
              # rm -rf $file
            done
        done
        
